## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
src/Main.sln.ide/

# User-specific files
src/.vs/config/*
*.suo
*.user
*.sln.docstates

# Build results
[Dd]ebug/
[Rr]elease/
x64/
build/
[Bb]in/
[Oo]bj/

# Enable "build/" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets
!packages/*/build/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

*_i.c
*_p.c
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.log
*.scc

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*
*.ncrunchproject

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.Publish.xml
*.pubxml

# NuGet Packages Directory
## TODO: If you have NuGet Package Restore enabled, uncomment the next line
packages/

# Windows Azure Build Output
csx
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
sql/
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.[Pp]ublish.xml
*.publishsettings

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
App_Data/*.mdf
App_Data/*.ldf

# ApprovalTests Files
*.approved.txt.orig
*.received.txt
*.received.html
*.orig
expectationtests.xml

# DotCover Files
*.coverage.raw

# =========================
# Windows detritus
# =========================

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Mac crap
.DS_Store

# Less


*.DotSettings.user
src/*.nupkg
src/TestPackaging/
!src/TestPackaging/*.nuspec
Tests/
Tests/*
src/Tenants/
src/Tenants/*
*.coverage
*.coverage.raw
OpenCover/*/*
unittest.coverage.raw.xml
UnitTestResults.xml

src/*/.vscode/*
src/*_qs.admin_bin/*
src/*_qs.website_bin/*
src/.vs
.vs/
output
src/TestPackaging
src/*_platform_admin_bin/
src/*_platform_www_bin/
src/*_platform_website_bin/
src/*_platform_api_bin/
src/*_platform_whitelabel_bin/
src/*_repos_*/

/www
/website
/admin
/api
/whitelabel

/*/.bower
/*/.npm
src/*/bower_components
src/*/node_modules
src/node_modules

# NOTE: These are required due to the dynamic nature of the WhiteLabel UX
!src/QS.WhiteLabel/bower_components

# Manual NBuilder inclusion for now while we contact on a pull vs fork...
!src/tools/NBuilder/FizzWare.NBuilder.dll 
!src/tools/NBuilder/FizzWare.NBuilder.pdb 

!adhoc-linq/Linqpad References/tools/NuGet.exe
!src/UITests/operadriver.exe
tools/
build-output/
